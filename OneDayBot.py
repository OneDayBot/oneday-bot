import os
import asyncio
from telegram import Update
from telegram.ext import (
    Application,
    CommandHandler,
    ContextTypes,
    PicklePersistence,
)
from telegram.error import Conflict

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±–æ—Ç–∞
TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
PERSISTENCE_FILE = "bot_data.pickle"

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–æ–¥–∞—Ç–∫–∞ –∑—ñ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è–º —Å—Ç–∞–Ω—É
persistence = PicklePersistence(filepath=PERSISTENCE_FILE)
app = Application.builder().token(TOKEN).persistence(persistence).build()

# –û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üîÑ –ë–æ—Ç —É—Å–ø—ñ—à–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω–∏–π!")

# –û–±—Ä–æ–±–Ω–∏–∫ –ø–æ–º–∏–ª–æ–∫
async def error_handler(update: object, context: ContextTypes.DEFAULT_TYPE):
    print(f"‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞: {context.error}")

# –û—Å–Ω–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è
async def main():
    # –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏
    app.add_handler(CommandHandler("start", start))
    app.add_error_handler(error_handler)

    # –ó–∞–ø—É—Å–∫–∞—î–º–æ –±–æ—Ç–∞
    try:
        print("ü§ñ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
        await app.bot.delete_webhook(drop_pending_updates=True)
        await app.initialize()
        await app.start()
        print("‚úÖ –ë–æ—Ç —É—Å–ø—ñ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–∏–π!")
        while True:
            await asyncio.sleep(3600)  # –ù–µ—Å–∫—ñ–Ω—á–µ–Ω–Ω–∏–π —Ü–∏–∫–ª
    except Conflict:
        print("‚ö†Ô∏è –í–∏—è–≤–ª–µ–Ω–æ –∫–æ–Ω—Ñ–ª—ñ–∫—Ç: —ñ–Ω—à–∏–π –µ–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ –≤–∂–µ –ø—Ä–∞—Ü—é—î")
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞: {e}")
    finally:
        await app.stop()
        await app.shutdown()

if __name__ == "__main__":
    asyncio.run(main())
